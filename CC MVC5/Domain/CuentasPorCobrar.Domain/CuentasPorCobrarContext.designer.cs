#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CuentasPorCobrar.Domain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CuentasxCobrar")]
	public partial class CuentasPorCobrarContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    partial void InsertCuentasContable(CuentasContable instance);
    partial void UpdateCuentasContable(CuentasContable instance);
    partial void DeleteCuentasContable(CuentasContable instance);
    partial void InsertTransacciones(Transacciones instance);
    partial void UpdateTransacciones(Transacciones instance);
    partial void DeleteTransacciones(Transacciones instance);
    partial void InsertTipoDocumentos(TipoDocumentos instance);
    partial void UpdateTipoDocumentos(TipoDocumentos instance);
    partial void DeleteTipoDocumentos(TipoDocumentos instance);
    partial void InsertAsientos(Asientos instance);
    partial void UpdateAsientos(Asientos instance);
    partial void DeleteAsientos(Asientos instance);
    #endregion
		
		public CuentasPorCobrarContextDataContext() : 
				base(global::CuentasPorCobrar.Domain.Properties.Settings.Default.CuentasxCobrarConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CuentasPorCobrarContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CuentasPorCobrarContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CuentasPorCobrarContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CuentasPorCobrarContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
		
		public System.Data.Linq.Table<CuentasContable> CuentasContable
		{
			get
			{
				return this.GetTable<CuentasContable>();
			}
		}
		
		public System.Data.Linq.Table<Transacciones> Transacciones
		{
			get
			{
				return this.GetTable<Transacciones>();
			}
		}
		
		public System.Data.Linq.Table<TipoDocumentos> TipoDocumentos
		{
			get
			{
				return this.GetTable<TipoDocumentos>();
			}
		}
		
		public System.Data.Linq.Table<Asientos> Asientos
		{
			get
			{
				return this.GetTable<Asientos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios
	{
		
		private string _Usuario;
		
		private string _Password;
		
		private string _Privilegio;
		
		public Usuarios()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(8)")]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this._Usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(10)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Privilegio", DbType="Char(2)")]
		public string Privilegio
		{
			get
			{
				return this._Privilegio;
			}
			set
			{
				if ((this._Privilegio != value))
				{
					this._Privilegio = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDClientes;
		
		private string _Nombre;
		
		private string _Cedula;
		
		private System.Nullable<double> _Credito;
		
		private System.Nullable<double> _Limite;
		
		private System.Nullable<bool> _Estado;
		
		private EntitySet<Asientos> _Asientos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClientesChanging(int value);
    partial void OnIDClientesChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnCreditoChanging(System.Nullable<double> value);
    partial void OnCreditoChanged();
    partial void OnLimiteChanging(System.Nullable<double> value);
    partial void OnLimiteChanged();
    partial void OnEstadoChanging(System.Nullable<bool> value);
    partial void OnEstadoChanged();
    #endregion
		
		public Clientes()
		{
			this._Asientos = new EntitySet<Asientos>(new Action<Asientos>(this.attach_Asientos), new Action<Asientos>(this.detach_Asientos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClientes", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDClientes
		{
			get
			{
				return this._IDClientes;
			}
			set
			{
				if ((this._IDClientes != value))
				{
					this.OnIDClientesChanging(value);
					this.SendPropertyChanging();
					this._IDClientes = value;
					this.SendPropertyChanged("IDClientes");
					this.OnIDClientesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credito", DbType="Float")]
		public System.Nullable<double> Credito
		{
			get
			{
				return this._Credito;
			}
			set
			{
				if ((this._Credito != value))
				{
					this.OnCreditoChanging(value);
					this.SendPropertyChanging();
					this._Credito = value;
					this.SendPropertyChanged("Credito");
					this.OnCreditoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limite", DbType="Float")]
		public System.Nullable<double> Limite
		{
			get
			{
				return this._Limite;
			}
			set
			{
				if ((this._Limite != value))
				{
					this.OnLimiteChanging(value);
					this.SendPropertyChanging();
					this._Limite = value;
					this.SendPropertyChanged("Limite");
					this.OnLimiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit")]
		public System.Nullable<bool> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Asientos", Storage="_Asientos", ThisKey="IDClientes", OtherKey="IDClientes")]
		public EntitySet<Asientos> Asientos
		{
			get
			{
				return this._Asientos;
			}
			set
			{
				this._Asientos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asientos(Asientos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Asientos(Asientos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CuentasContable")]
	public partial class CuentasContable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCuentasContables;
		
		private System.Nullable<int> _CuentasContables;
		
		private EntitySet<TipoDocumentos> _TipoDocumentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCuentasContablesChanging(int value);
    partial void OnIDCuentasContablesChanged();
    partial void OnCuentasContablesChanging(System.Nullable<int> value);
    partial void OnCuentasContablesChanged();
    #endregion
		
		public CuentasContable()
		{
			this._TipoDocumentos = new EntitySet<TipoDocumentos>(new Action<TipoDocumentos>(this.attach_TipoDocumentos), new Action<TipoDocumentos>(this.detach_TipoDocumentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCuentasContables", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCuentasContables
		{
			get
			{
				return this._IDCuentasContables;
			}
			set
			{
				if ((this._IDCuentasContables != value))
				{
					this.OnIDCuentasContablesChanging(value);
					this.SendPropertyChanging();
					this._IDCuentasContables = value;
					this.SendPropertyChanged("IDCuentasContables");
					this.OnIDCuentasContablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CuentasContables", DbType="Int")]
		public System.Nullable<int> CuentasContables
		{
			get
			{
				return this._CuentasContables;
			}
			set
			{
				if ((this._CuentasContables != value))
				{
					this.OnCuentasContablesChanging(value);
					this.SendPropertyChanging();
					this._CuentasContables = value;
					this.SendPropertyChanged("CuentasContables");
					this.OnCuentasContablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CuentasContable_TipoDocumentos", Storage="_TipoDocumentos", ThisKey="IDCuentasContables", OtherKey="Cuentacontable")]
		public EntitySet<TipoDocumentos> TipoDocumentos
		{
			get
			{
				return this._TipoDocumentos;
			}
			set
			{
				this._TipoDocumentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipoDocumentos(TipoDocumentos entity)
		{
			this.SendPropertyChanging();
			entity.CuentasContable = this;
		}
		
		private void detach_TipoDocumentos(TipoDocumentos entity)
		{
			this.SendPropertyChanging();
			entity.CuentasContable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transacciones")]
	public partial class Transacciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTransacciones;
		
		private string _TipoMovimiento;
		
		private System.Nullable<int> _IDTipoDocumento;
		
		private System.Nullable<int> _IDCliente;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<decimal> _Monto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTransaccionesChanging(int value);
    partial void OnIDTransaccionesChanged();
    partial void OnTipoMovimientoChanging(string value);
    partial void OnTipoMovimientoChanged();
    partial void OnIDTipoDocumentoChanging(System.Nullable<int> value);
    partial void OnIDTipoDocumentoChanged();
    partial void OnIDClienteChanging(System.Nullable<int> value);
    partial void OnIDClienteChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnMontoChanging(System.Nullable<decimal> value);
    partial void OnMontoChanged();
    #endregion
		
		public Transacciones()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTransacciones", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTransacciones
		{
			get
			{
				return this._IDTransacciones;
			}
			set
			{
				if ((this._IDTransacciones != value))
				{
					this.OnIDTransaccionesChanging(value);
					this.SendPropertyChanging();
					this._IDTransacciones = value;
					this.SendPropertyChanged("IDTransacciones");
					this.OnIDTransaccionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoMovimiento", DbType="Char(2)")]
		public string TipoMovimiento
		{
			get
			{
				return this._TipoMovimiento;
			}
			set
			{
				if ((this._TipoMovimiento != value))
				{
					this.OnTipoMovimientoChanging(value);
					this.SendPropertyChanging();
					this._TipoMovimiento = value;
					this.SendPropertyChanged("TipoMovimiento");
					this.OnTipoMovimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoDocumento", DbType="Int")]
		public System.Nullable<int> IDTipoDocumento
		{
			get
			{
				return this._IDTipoDocumento;
			}
			set
			{
				if ((this._IDTipoDocumento != value))
				{
					this.OnIDTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._IDTipoDocumento = value;
					this.SendPropertyChanged("IDTipoDocumento");
					this.OnIDTipoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", DbType="Int")]
		public System.Nullable<int> IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monto", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> Monto
		{
			get
			{
				return this._Monto;
			}
			set
			{
				if ((this._Monto != value))
				{
					this.OnMontoChanging(value);
					this.SendPropertyChanging();
					this._Monto = value;
					this.SendPropertyChanged("Monto");
					this.OnMontoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoDocumentos")]
	public partial class TipoDocumentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDocumentos;
		
		private string _Descripcion;
		
		private System.Nullable<int> _Cuentacontable;
		
		private System.Nullable<bool> _Estado;
		
		private EntityRef<CuentasContable> _CuentasContable;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDocumentosChanging(int value);
    partial void OnIDDocumentosChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCuentacontableChanging(System.Nullable<int> value);
    partial void OnCuentacontableChanged();
    partial void OnEstadoChanging(System.Nullable<bool> value);
    partial void OnEstadoChanged();
    #endregion
		
		public TipoDocumentos()
		{
			this._CuentasContable = default(EntityRef<CuentasContable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocumentos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDocumentos
		{
			get
			{
				return this._IDDocumentos;
			}
			set
			{
				if ((this._IDDocumentos != value))
				{
					this.OnIDDocumentosChanging(value);
					this.SendPropertyChanging();
					this._IDDocumentos = value;
					this.SendPropertyChanged("IDDocumentos");
					this.OnIDDocumentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(90)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuentacontable", DbType="Int")]
		public System.Nullable<int> Cuentacontable
		{
			get
			{
				return this._Cuentacontable;
			}
			set
			{
				if ((this._Cuentacontable != value))
				{
					if (this._CuentasContable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCuentacontableChanging(value);
					this.SendPropertyChanging();
					this._Cuentacontable = value;
					this.SendPropertyChanged("Cuentacontable");
					this.OnCuentacontableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit")]
		public System.Nullable<bool> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CuentasContable_TipoDocumentos", Storage="_CuentasContable", ThisKey="Cuentacontable", OtherKey="IDCuentasContables", IsForeignKey=true)]
		public CuentasContable CuentasContable
		{
			get
			{
				return this._CuentasContable.Entity;
			}
			set
			{
				CuentasContable previousValue = this._CuentasContable.Entity;
				if (((previousValue != value) 
							|| (this._CuentasContable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CuentasContable.Entity = null;
						previousValue.TipoDocumentos.Remove(this);
					}
					this._CuentasContable.Entity = value;
					if ((value != null))
					{
						value.TipoDocumentos.Add(this);
						this._Cuentacontable = value.IDCuentasContables;
					}
					else
					{
						this._Cuentacontable = default(Nullable<int>);
					}
					this.SendPropertyChanged("CuentasContable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asientos")]
	public partial class Asientos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAsientos;
		
		private string _Descripcion;
		
		private System.Nullable<int> _IDClientes;
		
		private System.Nullable<int> _Cuenta;
		
		private string _TipoMovimiento;
		
		private System.Nullable<System.DateTime> _FechaAsiento;
		
		private System.Nullable<double> _MontoAsiento;
		
		private System.Nullable<bool> _Estado;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAsientosChanging(int value);
    partial void OnIDAsientosChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIDClientesChanging(System.Nullable<int> value);
    partial void OnIDClientesChanged();
    partial void OnCuentaChanging(System.Nullable<int> value);
    partial void OnCuentaChanged();
    partial void OnTipoMovimientoChanging(string value);
    partial void OnTipoMovimientoChanged();
    partial void OnFechaAsientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaAsientoChanged();
    partial void OnMontoAsientoChanging(System.Nullable<double> value);
    partial void OnMontoAsientoChanged();
    partial void OnEstadoChanging(System.Nullable<bool> value);
    partial void OnEstadoChanged();
    #endregion
		
		public Asientos()
		{
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAsientos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAsientos
		{
			get
			{
				return this._IDAsientos;
			}
			set
			{
				if ((this._IDAsientos != value))
				{
					this.OnIDAsientosChanging(value);
					this.SendPropertyChanging();
					this._IDAsientos = value;
					this.SendPropertyChanged("IDAsientos");
					this.OnIDAsientosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(20)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClientes", DbType="Int")]
		public System.Nullable<int> IDClientes
		{
			get
			{
				return this._IDClientes;
			}
			set
			{
				if ((this._IDClientes != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClientesChanging(value);
					this.SendPropertyChanging();
					this._IDClientes = value;
					this.SendPropertyChanged("IDClientes");
					this.OnIDClientesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuenta", DbType="Int")]
		public System.Nullable<int> Cuenta
		{
			get
			{
				return this._Cuenta;
			}
			set
			{
				if ((this._Cuenta != value))
				{
					this.OnCuentaChanging(value);
					this.SendPropertyChanging();
					this._Cuenta = value;
					this.SendPropertyChanged("Cuenta");
					this.OnCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoMovimiento", DbType="Char(2)")]
		public string TipoMovimiento
		{
			get
			{
				return this._TipoMovimiento;
			}
			set
			{
				if ((this._TipoMovimiento != value))
				{
					this.OnTipoMovimientoChanging(value);
					this.SendPropertyChanging();
					this._TipoMovimiento = value;
					this.SendPropertyChanged("TipoMovimiento");
					this.OnTipoMovimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAsiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaAsiento
		{
			get
			{
				return this._FechaAsiento;
			}
			set
			{
				if ((this._FechaAsiento != value))
				{
					this.OnFechaAsientoChanging(value);
					this.SendPropertyChanging();
					this._FechaAsiento = value;
					this.SendPropertyChanged("FechaAsiento");
					this.OnFechaAsientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoAsiento", DbType="Float")]
		public System.Nullable<double> MontoAsiento
		{
			get
			{
				return this._MontoAsiento;
			}
			set
			{
				if ((this._MontoAsiento != value))
				{
					this.OnMontoAsientoChanging(value);
					this.SendPropertyChanging();
					this._MontoAsiento = value;
					this.SendPropertyChanged("MontoAsiento");
					this.OnMontoAsientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit")]
		public System.Nullable<bool> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Asientos", Storage="_Clientes", ThisKey="IDClientes", OtherKey="IDClientes", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Asientos.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Asientos.Add(this);
						this._IDClientes = value.IDClientes;
					}
					else
					{
						this._IDClientes = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
